(in-package :now)

(defparameter *map-features*
  '((administrative "administrative areas")
    (administrative.country "countries")
    (administrative.land_parcel "land parcels")
    (administrative.locality "localities")
    (administrative.neighborhood "neighborhoods")
    (administrative.province "provinces")
    (all "all selector types")
    (landscape "landscapes")
    (landscape.man_made "man made structures")
    (landscape.natural "natural features")
    (landscape.natural.landcover "landcover")
    (landscape.natural.terrain "terrain")
    (poi "points of interest")
    (poi.attraction "attractions for tourists")
    (poi.business "businesses")
    (poi.government "government buildings")
    (poi.medical "emergency services (hospitals, pharmacies, police, doctors, etc)")
    (poi.park "parks")
    (poi.place_of_worship "places of worship, such as church, temple, or mosque")
    (poi.school "schools")
    (poi.sports_complex "sports complexes")
    (road.all "roads")
    (road.arterial "arterial roads")
    (road.highway "highways")
    (road.highway.controlled_access "controlled-access highways")
    (road.local "local roads")
    (transit "all transit stations and lines")
    (transit.line "transit lines")
    (transit.station "all transit stations")
    (transit.station.airport " airports")
    (transit.station.bus "bus stops")
    (transit.station.rail "rail stations")
    (water "bodies of water")))

(defparameter *default-map-styles* '(all))

(defun current-map-styles ()
  (or (session-value 'map-styles) *default-map-styles*))

(defun create-map-styles ()
  (let ((styles (current-map-styles)))
    (json:encode-json-to-string
     `(,(iter (for style in styles)
              (collect `(,(cons 'feature-type style) (stylers . (((visibility . "on")))))))))))
